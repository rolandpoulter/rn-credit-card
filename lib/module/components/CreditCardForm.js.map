{"version":3,"sources":["CreditCardForm.tsx"],"names":["React","useRef","useState","useEffect","Keyboard","Platform","ScrollView","StyleSheet","useWindowDimensions","View","useFormContext","cardValidator","FormTextField","cardNumberFormatter","expirationDateFormatter","LibraryContext","Button","CardIcon","Conditional","FormCard","getTranslations","CardFields","CreditCardForm","props","horizontalStart","translations","parentTranslations","overrides","formContext","trigger","watch","cardNumber","card","number","isAmex","type","cvvLength","isHorizontal","setIsHorizontal","OS","width","windowWidth","inputWidth","scrollRef","holderNameRef","cardNumberRef","expirationRef","cvvRef","focusedField","setFocusedField","current","focus","textFieldStyle","styles","textField","regularField","goNext","field","result","scrollTo","x","CVV","dismiss","ref","fonts","regular","bold","container","formOnly","maxHeight","required","cardNumberRequired","validate","isValid","value","cardNumberInvalid","CardNumber","onChange","cardHolderName","cardHolderNameRequired","cardholderName","cardHolderNameInvalid","CardHolderName","row","marginRight","expiration","expirationRequired","expirationDate","expirationInvalid","Expiration","securityCode","securityCodeRequired","cvv","securityCodeInvalid","button","done","next","create","flex","flexDirection","marginBottom","marginTop","height","alignSelf","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect } from 'react'\nimport {\n  Keyboard,\n  Platform,\n  ScrollView,\n  StyleSheet,\n  TextInput,\n  useWindowDimensions,\n  View,\n} from 'react-native'\nimport { useFormContext } from 'react-hook-form'\nimport cardValidator from 'card-validator'\nimport FormTextField from './FormTextField'\nimport {\n  cardNumberFormatter,\n  expirationDateFormatter,\n} from '../utils/formatters'\nimport LibraryContext from '../LibraryContext'\nimport Button from './Button'\nimport CardIcon from './CardIcon'\nimport Conditional from './Conditional'\nimport FormCard from './FormCard'\nimport { getTranslations } from '../utils/translations'\nimport { CardFields, LibraryProps } from '../types'\n\nconst CreditCardForm: React.FC<LibraryProps> = (props) => {\n  const {\n    horizontalStart = true,\n    translations: parentTranslations,\n    overrides,\n  } = props\n  const translations = getTranslations(parentTranslations)\n  const formContext = useFormContext()\n  const { trigger, watch } = formContext\n  const cardNumber = watch('cardNumber')\n  const { card } = cardValidator.number(cardNumber)\n  const isAmex = card?.type === 'american-express'\n  const cvvLength = isAmex ? 4 : 3\n\n  const [isHorizontal, setIsHorizontal] = useState(\n    horizontalStart && Platform.OS === 'ios',\n  )\n\n  const { width: windowWidth } = useWindowDimensions()\n  // input has 36*2 padding\n  const inputWidth = windowWidth - 72\n\n  const scrollRef = useRef<ScrollView>(null)\n  const holderNameRef = useRef<TextInput>(null)\n  const cardNumberRef = useRef<TextInput>(null)\n  const expirationRef = useRef<TextInput>(null)\n  const cvvRef = useRef<TextInput>(null)\n\n  const [focusedField, setFocusedField] = useState<CardFields | null>(null)\n\n  useEffect(() => {\n    if (cardNumberRef?.current) {\n      cardNumberRef.current.focus()\n    }\n  }, [cardNumberRef])\n\n  const textFieldStyle = isHorizontal\n    ? [\n        styles.textField,\n        {\n          width: inputWidth,\n        },\n      ]\n    : styles.regularField\n\n  async function goNext() {\n    if (focusedField === null) return\n\n    const field = ['cardNumber', 'holderName', 'expiration', 'cvv'][\n      focusedField\n    ]\n\n    if (isHorizontal) {\n      const result = await trigger(field)\n      if (!result) return\n      scrollRef.current?.scrollTo({ x: (focusedField + 1) * inputWidth })\n    }\n\n    if (focusedField === CardFields.CVV) {\n      setFocusedField(null)\n      setIsHorizontal(false)\n      Keyboard.dismiss()\n      return\n    }\n\n    const ref = [cardNumberRef, holderNameRef, expirationRef, cvvRef][\n      focusedField + 1\n    ]\n    ref.current?.focus()\n  }\n\n  return (\n    <LibraryContext.Provider\n      value={{\n        ...props,\n        overrides: overrides || {},\n        fonts: {\n          regular: props.fonts?.regular, // || 'RobotoMono_400Regular',\n          bold: props.fonts?.bold, // || 'RobotoMono_700Bold',\n        },\n        translations,\n      }}\n    >\n      <View style={styles.container}>\n        <Conditional condition={!props.formOnly}>\n          <FormCard cardType={card?.type} focusedField={focusedField} />\n        </Conditional>\n        <ScrollView\n          ref={scrollRef}\n          style={isHorizontal && { maxHeight: 120 }}\n          pagingEnabled={isHorizontal}\n          horizontal={isHorizontal}\n          scrollEnabled={!isHorizontal}\n          keyboardShouldPersistTaps=\"handled\"\n        >\n          <FormTextField\n            style={textFieldStyle}\n            ref={cardNumberRef}\n            name=\"cardNumber\"\n            label={translations.cardNumber}\n            keyboardType=\"number-pad\"\n            autoCompleteType=\"cc-number\"\n            maxLength={19}\n            validationLength={isAmex ? 18 : 19}\n            rules={{\n              required: translations.cardNumberRequired,\n              validate: {\n                isValid: (value: string) => {\n                  return (\n                    cardValidator.number(value).isValid ||\n                    translations.cardNumberInvalid\n                  )\n                },\n              },\n            }}\n            formatter={cardNumberFormatter}\n            endEnhancer={<CardIcon cardNumber={cardNumber} />}\n            onFocus={() => setFocusedField(CardFields.CardNumber)}\n            onValid={goNext}\n            onChange={(value) => {\n              if (props.onChange) {\n                props.onChange('cardName', value, formContext)\n              }\n            }}\n          />\n          <FormTextField\n            style={textFieldStyle}\n            ref={holderNameRef}\n            name=\"holderName\"\n            autoCompleteType=\"name\"\n            label={translations.cardHolderName}\n            rules={{\n              required: translations.cardHolderNameRequired,\n              validate: {\n                isValid: (value: string) => {\n                  return (\n                    cardValidator.cardholderName(value).isValid ||\n                    translations.cardHolderNameInvalid\n                  )\n                },\n              },\n            }}\n            autoCorrect={false}\n            onSubmitEditing={goNext}\n            onFocus={() => setFocusedField(CardFields.CardHolderName)}\n            onChange={(value) => {\n              if (props.onChange) {\n                props.onChange('holderName', value, formContext)\n              }\n            }}\n          />\n          <View style={styles.row}>\n            <FormTextField\n              style={[\n                textFieldStyle,\n                {\n                  marginRight: isHorizontal ? 0 : 24,\n                },\n              ]}\n              ref={expirationRef}\n              name=\"expiration\"\n              label={translations.expiration}\n              keyboardType=\"number-pad\"\n              autoCompleteType=\"cc-exp\"\n              maxLength={5}\n              validationLength={5}\n              rules={{\n                required: translations.expirationRequired,\n                validate: {\n                  isValid: (value: string) => {\n                    return (\n                      cardValidator.expirationDate(value).isValid ||\n                      translations.expirationInvalid\n                    )\n                  },\n                },\n              }}\n              formatter={expirationDateFormatter}\n              onFocus={() => setFocusedField(CardFields.Expiration)}\n              onValid={goNext}\n              onChange={(value) => {\n                if (props.onChange) {\n                  props.onChange('expiration', value, formContext)\n                }\n              }}\n            />\n            <FormTextField\n              style={textFieldStyle}\n              ref={cvvRef}\n              name=\"cvv\"\n              label={translations.securityCode}\n              keyboardType=\"number-pad\"\n              autoCompleteType=\"cc-csc\"\n              maxLength={cvvLength}\n              validationLength={cvvLength}\n              rules={{\n                required: translations.securityCodeRequired,\n                validate: {\n                  isValid: (value: string) => {\n                    return (\n                      cardValidator.cvv(value, cvvLength).isValid ||\n                      translations.securityCodeInvalid\n                    )\n                  },\n                },\n              }}\n              onFocus={() => setFocusedField(CardFields.CVV)}\n              onValid={goNext}\n              onChange={(value) => {\n                if (props.onChange) {\n                  props.onChange('cvv', value, formContext)\n                }\n              }}\n            />\n          </View>\n        </ScrollView>\n        <Conditional condition={isHorizontal}>\n          <Button\n            style={[styles.button, overrides?.button]}\n            title={\n              focusedField === CardFields.CVV\n                ? translations.done\n                : translations.next\n            }\n            onPress={goNext}\n          />\n        </Conditional>\n      </View>\n    </LibraryContext.Provider>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  row: {\n    flex: 1,\n    flexDirection: 'row',\n    marginBottom: 36,\n  },\n  textField: {\n    marginTop: 24,\n    height: 100,\n  },\n  regularField: {\n    flex: 1,\n    marginTop: 24,\n  },\n  button: {\n    width: 100,\n    alignSelf: 'flex-end',\n    borderTopLeftRadius: 32,\n    borderBottomLeftRadius: 32,\n    borderTopRightRadius: 8,\n    borderBottomRightRadius: 24,\n    backgroundColor: '#0093E9',\n  },\n})\n\nexport default CreditCardForm\n"]}