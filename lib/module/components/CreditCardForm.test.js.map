{"version":3,"sources":["CreditCardForm.test.tsx"],"names":["React","fireEvent","render","waitFor","def","get","CreditCardForm","Button","CreditCardProvider","Wrapper","onSubmit","model","provider","handleSubmit","jest","fn","it","queryByText","getByTestId","cardInput","changeText","expect","toBeNull","not","input","getByText","press","toHaveBeenLastCalledWith","holderName","cardNumber","expiration","cvv"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { fireEvent, render, waitFor } from '@testing-library/react-native'\nimport { def, get } from 'bdd-lazy-var/getter'\nimport CreditCardForm from './CreditCardForm'\nimport { Button } from 'react-native'\nimport { FormModel } from '../types'\nimport CreditCardProvider from './CreditCardProvider';\n\ntype DUMB = (e: any) => void\n\ntype DUMBDUMB = (fn: DUMB) => DUMB\n\ntype DUMBDUMBDUMB = {\n  handleSubmit: DUMBDUMB,\n}\n\nconst Wrapper = () => {\n  const onSubmit = (model: FormModel) => {\n    get.onSubmit(model)\n  }\n  return (\n    <CreditCardProvider>\n      {(provider: DUMBDUMBDUMB) => (\n        <>\n          <CreditCardForm />\n          <Button onPress={provider.handleSubmit(onSubmit)} title={'Submit'} />\n        </>\n      )}\n    </CreditCardProvider>\n  )\n}\n\ndef('render', () => () => render(<Wrapper />))\ndef('onSubmit', () => jest.fn())\n\nit('validates credit card number', async () => {\n  const { queryByText, getByTestId } = get.render()\n\n  // does not display validation message until input is filled\n  const cardInput = getByTestId('TextField.cardNumber')\n  fireEvent.changeText(cardInput, '55555555')\n  await waitFor(() => {\n    expect(queryByText(/This card number looks invalid./)).toBeNull()\n  })\n\n  // invalid card\n  fireEvent.changeText(cardInput, '5555555555554440')\n  await waitFor(() => {\n    expect(queryByText(/This card number looks invalid./)).not.toBeNull()\n  })\n\n  // valid card\n  fireEvent.changeText(cardInput, '5555 5555 5555 4444')\n  await waitFor(() => {\n    expect(queryByText(/This card number looks invalid./)).toBeNull()\n  })\n})\n\nit('validates expiration date', async () => {\n  const { queryByText, getByTestId } = get.render()\n\n  const input = getByTestId('TextField.expiration')\n  // passed expiration date\n  fireEvent.changeText(input, '1018')\n  await waitFor(() =>\n    expect(queryByText(/This expiration date looks invalid./)).not.toBeNull(),\n  )\n\n  // valid date\n  fireEvent.changeText(input, '10/23')\n  await waitFor(() =>\n    expect(queryByText(/This expiration date looks invalid./)).toBeNull(),\n  )\n})\n\nit('validates cvv', async () => {\n  const { queryByText, getByTestId } = get.render()\n\n  const input = getByTestId('TextField.cvv')\n  // invalid input\n  fireEvent.changeText(input, '4444')\n  await waitFor(() =>\n    expect(queryByText('This security code looks invalid.')).not.toBeNull(),\n  )\n\n  // valid input\n  fireEvent.changeText(input, '333')\n  await waitFor(() =>\n    expect(queryByText('This security code looks invalid.')).toBeNull(),\n  )\n})\n\nit('submits the form', async () => {\n  const { getByText, getByTestId } = get.render()\n\n  fireEvent.changeText(getByTestId('TextField.holderName'), 'Halil Bilir')\n  fireEvent.changeText(getByTestId('TextField.cardNumber'), '5555555555554444')\n  fireEvent.changeText(getByTestId('TextField.expiration'), '0224')\n  fireEvent.changeText(getByTestId('TextField.cvv'), '333')\n\n  fireEvent.press(getByText('Submit'))\n\n  await waitFor(() =>\n    expect(get.onSubmit).toHaveBeenLastCalledWith({\n      holderName: 'Halil Bilir',\n      // cardNumber and expiration are now formatted\n      cardNumber: '5555 5555 5555 4444',\n      expiration: '02/24',\n      cvv: '333',\n    }),\n  )\n})\n"]}