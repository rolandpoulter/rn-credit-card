{"version":3,"sources":["index.tsx"],"names":["React","useContext","useEffect","useRef","Image","StyleSheet","FlipCard","CardFields","LibraryContext","BackSide","FrontSide","usePrevious","value","ref","current","background","require","Card","model","cardType","focusedField","disabled","backgroundImage","previousFocused","cardRef","switchToBack","CVV","switchToFront","flip","styles","container","opacity","create","width","height","paddingVertical","borderRadius","position"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useRef } from 'react'\nimport { Image, StyleSheet } from 'react-native'\nimport FlipCard from 'react-native-card-flip'\nimport { CardFields, FormModel } from '../../types'\nimport LibraryContext from '../../LibraryContext'\n\nimport BackSide from './BackSide'\nimport FrontSide from './FrontSide'\n\ntype Props = {\n  focusedField: CardFields | null\n  cardType?: string\n  model: FormModel\n  disabled?: boolean | null\n}\n\nfunction usePrevious(value: any) {\n  const ref = useRef()\n  useEffect(() => {\n    ref.current = value\n  })\n  return ref.current\n}\n\nconst background = require('../../assets/background.png.js')\n\nconst Card: React.FC<Props> = ({ model, cardType, focusedField, disabled }) => {\n  const { backgroundImage } = useContext(LibraryContext)\n  const previousFocused = usePrevious(focusedField)\n  const cardRef = useRef<FlipCard>()\n\n  useEffect(() => {\n    const switchToBack =\n      focusedField === CardFields.CVV && previousFocused !== CardFields.CVV\n    const switchToFront =\n      focusedField !== CardFields.CVV && previousFocused === CardFields.CVV\n\n    if (switchToBack || switchToFront) {\n      cardRef.current?.flip()\n    }\n  }, [focusedField, previousFocused])\n\n\n  return (\n    <>\n      {/* @ts-ignore */}\n      <FlipCard style={[styles.container, disabled ? { opacity: 0.1 } : {}]} ref={cardRef}>\n        <>\n          {backgroundImage || (\n            <Image style={styles.background} source={background} />\n          )}\n          <FrontSide\n            model={model}\n            cardType={cardType}\n            focusedField={focusedField}\n            disabled={disabled}\n          />\n        </>\n        <>\n          {backgroundImage || (\n            <Image style={styles.background} source={background} />\n          )}\n          <BackSide model={model} cardType={cardType} disabled={disabled} />\n        </>\n      </FlipCard>\n    </>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    width: '100%',\n    height: 200,\n    paddingVertical: 24,\n    borderRadius: 12,\n  },\n  background: {\n    position: 'absolute',\n    width: '100%',\n    height: '100%',\n    borderRadius: 12,\n  },\n})\n\nexport default Card\n"]}