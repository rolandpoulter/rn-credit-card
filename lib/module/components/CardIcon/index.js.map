{"version":3,"sources":["index.tsx"],"names":["React","useCallback","useContext","Image","StyleSheet","cardValidator","LibraryContext","CARDS","visa","icon","require","animation","mastercard","alternativeAnimation","discover","CardIcon","props","LottieView","cardNumber","card","number","animRef","node","play","data","type","styles","uri","lottie","create","width","height"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,UAA7B,QAA+C,OAA/C;AACA,SAASC,KAAT,EAAgBC,UAAhB,QAAkC,cAAlC;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AAYA,MAAMC,KAA2B,GAAG;AAClCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,IAAI,EAAEC,OAAO,CAAC,qBAAD,CADT;AAEJC,IAAAA,SAAS,EAAED,OAAO,CAAC,oBAAD;AAFd,GAD4B;AAKlCE,EAAAA,UAAU,EAAE;AACVH,IAAAA,IAAI,EAAEC,OAAO,CAAC,2BAAD,CADH;AAEVC,IAAAA,SAAS,EAAED,OAAO,CAAC,0BAAD;AAFR,GALsB;AASlC,sBAAoB;AAClBD,IAAAA,IAAI,EAAEC,OAAO,CAAC,qBAAD,CADK;AAElBC,IAAAA,SAAS,EAAED,OAAO,CAAC,oBAAD,CAFA;AAGlBG,IAAAA,oBAAoB,EAAEH,OAAO,CAAC,wBAAD;AAHX,GATc;AAclCI,EAAAA,QAAQ,EAAE;AACRL,IAAAA,IAAI,EAAEC,OAAO,CAAC,yBAAD,CADL;AAERC,IAAAA,SAAS,EAAED,OAAO,CAAC,wBAAD;AAFV;AAdwB,CAApC;AAoBA;;AAEA,MAAMK,QAAyB,GAAIC,KAAD,IAAW;AAC3C,QAAM;AAAEC,IAAAA;AAAF,MAAiBf,UAAU,CAACI,cAAD,CAAjC;AACA,QAAM;AAAEY,IAAAA;AAAF,MAAiBF,KAAvB;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAWd,aAAa,CAACe,MAAd,CAAqBF,UAArB,CAAjB;AAEA,QAAMG,OAAO,GAAGpB,WAAW,CAAEqB,IAAD,IAAU;AACpC,QAAIA,IAAI,KAAK,IAAb,EAAmB;AACjBA,MAAAA,IAAI,CAACC,IAAL;AACD;AACF,GAJ0B,EAIxB,EAJwB,CAA3B;AAKA,QAAMC,IAAU,GAAGjB,KAAK,CAAC,CAAAY,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEM,IAAN,KAAc,CAAC,CAAhB,CAAxB;AAEA,MAAI,CAACD,IAAL,EAAW,OAAO,IAAP;;AAEX,MAAI,CAACP,UAAL,EAAiB;AACf,wBAAO,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAES,MAAM,CAACjB,IAArB;AAA2B,MAAA,MAAM,EAAE;AAAEkB,QAAAA,GAAG,EAAEH,IAAI,CAACf,IAAL,CAAUe;AAAjB;AAAnC,MAAP;AACD;;AAED,sBACE,oBAAC,UAAD;AACE,IAAA,GAAG,EAAEH,OADP;AAEE,IAAA,KAAK,EAAEK,MAAM,CAACE,MAFhB;AAGE,IAAA,MAAM,EAAEJ,IAAI,CAACb,SAHf;AAIE,IAAA,IAAI,EAAE;AAJR,IADF;AAQD,CA1BD;;AA4BA,MAAMe,MAAM,GAAGtB,UAAU,CAACyB,MAAX,CAAkB;AAC/BpB,EAAAA,IAAI,EAAE;AACJqB,IAAAA,KAAK,EAAE,EADH;AAEJC,IAAAA,MAAM,EAAE;AAFJ,GADyB;AAK/BH,EAAAA,MAAM,EAAE;AACNE,IAAAA,KAAK,EAAE,EADD;AAENC,IAAAA,MAAM,EAAE;AAFF;AALuB,CAAlB,CAAf;AAWA,eAAehB,QAAf","sourcesContent":["import React, { useCallback, useContext } from 'react'\nimport { Image, StyleSheet } from 'react-native'\nimport cardValidator from 'card-validator'\nimport LibraryContext from '../../LibraryContext'\n\ntype Props = {\n  cardNumber: string\n}\n\ntype Card = {\n  icon: any\n  animation: any\n  alternativeAnimation?: any\n}\n\nconst CARDS: Record<string, Card> = {\n  visa: {\n    icon: require('./icons/visa.png.js'),\n    animation: require('./lottie/visa.json'),\n  },\n  mastercard: {\n    icon: require('./icons/mastercard.png.js'),\n    animation: require('./lottie/mastercard.json'),\n  },\n  'american-express': {\n    icon: require('./icons/amex.png.js'),\n    animation: require('./lottie/amex.json'),\n    alternativeAnimation: require('./lottie/amexBlue.json'),\n  },\n  discover: {\n    icon: require('./icons/discover.png.js'),\n    animation: require('./lottie/discover.json'),\n  },\n}\n\ndebugger;\n\nconst CardIcon: React.FC<Props> = (props) => {\n  const { LottieView } = useContext(LibraryContext)\n  const { cardNumber } = props\n  const { card } = cardValidator.number(cardNumber)\n\n  const animRef = useCallback((node) => {\n    if (node !== null) {\n      node.play()\n    }\n  }, [])\n  const data: Card = CARDS[card?.type || -1]\n\n  if (!data) return null\n\n  if (!LottieView) {\n    return <Image style={styles.icon} source={{ uri: data.icon.data }} />\n  }\n\n  return (\n    <LottieView\n      ref={animRef}\n      style={styles.lottie}\n      source={data.animation}\n      loop={false}\n    />\n  )\n}\n\nconst styles = StyleSheet.create({\n  icon: {\n    width: 48,\n    height: 48,\n  },\n  lottie: {\n    width: 36,\n    height: 36,\n  },\n})\n\nexport default CardIcon\n"]}